import { DataTypes, Model } from 'sequelize';
import sequelize from '../config/database';

// Define the attributes of the Entrepreneur model
interface EntrepreneurAttributes {
  id?: number; // Optional because it will be generated automatically by the database
  nom: string;
  coordonnees: string;
}

// Define a type for creation attributes, which may exclude some fields such as the ID
interface EntrepreneurCreationAttributes extends Omit<EntrepreneurAttributes, 'id'> {}

// Extend the Sequelize Model with TypeScript typing
class Entrepreneur extends Model<EntrepreneurAttributes, EntrepreneurCreationAttributes> implements EntrepreneurAttributes {
  public id!: number; // Auto-generated by Sequelize
  public nom!: string;
  public coordonnees!: string;

  // Add timestamps if applicable (not used in this case, but added for reference)
  public readonly createdAt!: Date;
  public readonly updatedAt!: Date;
}

// Initialize the model
Entrepreneur.init(
  {
    id: {
      type: DataTypes.INTEGER,
      autoIncrement: true,
      primaryKey: true,
    },
    nom: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    coordonnees: {
      type: DataTypes.STRING,
      allowNull: false,
    },
  },
  {
    sequelize, // Associate this model with the Sequelize instance
    modelName: 'Entrepreneur',
    tableName: 'entrepreneurs',
    timestamps: false, // Set to true if createdAt and updatedAt timestamps should be managed automatically
  }
);

export default Entrepreneur;