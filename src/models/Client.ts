import { Model, DataTypes } from 'sequelize';
import db from '../config/database';

// Define the attributes of the Client model
interface ClientAttributes {
  id?: number; // Optional because it will be generated automatically by the database
  nom: string;
  coordonnees: string;
}

// Define a type for creation attributes, which may exclude some fields such as the ID
interface ClientCreationAttributes extends Omit<ClientAttributes, 'id'> {}

// Extend the Sequelize Model with TypeScript typing
class Client extends Model<ClientAttributes, ClientCreationAttributes> implements ClientAttributes {
  public id!: number; // Auto-generated by Sequelize
  public nom!: string;
  public coordonnees!: string;

  // Add timestamps if applicable (not used in this case, but added for reference)
  public readonly createdAt!: Date;
  public readonly updatedAt!: Date;
}

// Initialize the model
Client.init(
  {
    id: {
      type: DataTypes.INTEGER,
      autoIncrement: true,
      primaryKey: true,
    },
    nom: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    coordonnees: {
      type: DataTypes.STRING,
      allowNull: false,
    },
  },
  {
    sequelize: db, // Pass the Sequelize instance to associate with this model
    modelName: 'Client',
    tableName: 'clients',
    timestamps: false, // Set to true if createdAt and updatedAt timestamps should be managed automatically
  }
);

export default Client;
